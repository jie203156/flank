/*	
 * jQuery mmenu RTL add-on
 * mmenu.frebsite.nl
 */

@import "../../mixins";
@import "../../variables";


@if ( $mm_opt_rtl )
{
	.mm-menu_rtl
	{
		direction: rtl;


		//	Off-canvas menu
		@if ( $mm_opt_offcanvas )
		{
			&.mm-menu_offcanvas
			{
				right: auto;
			}
		}


		//	Panels
		.mm-panel:not( .mm-panel_opened )
		{
		//	transform: translate3d( -100%, 0, 0 );
			@include mm_translate( -100%, 0 );
		}
		.mm-panel.mm-panel_opened-parent
		{
		//	transform: translate3d( 30%, 0, 0 );
			@include mm_translate( 30%, 0 );
		}


		//	Navbar
		@if ( $mm_opt_navbar and $mm_opt_buttons )
		{
			.mm-navbar
			{
				.mm-btn
				{
					&:first-child
					{
						left: auto;
						right: 0;
					}
					&:last-child
					{
						right: auto;
						left: 0;
					}
				}
				.mm-btn_next:after
				{
					@include mm_btn_arrow_prev;
				}
				.mm-btn_prev:before
				{
					@include mm_btn_arrow_next;
				}
			}
		}


		//	Listviews
		@if ( $mm_opt_listviews )
		{
			.mm-listitem
			{
				&:after
				{
					left: 0;
					right: $mm_listitemIndent;
				}
				> a,
				> span
				{
					&:not( .mm-btn_next )
					{
						padding-left: $mm_listitemPadding;
						padding-right: $mm_listitemIndent !important;
						margin-right: 0 !important;
					}
				}

				@if ( $mm_opt_buttons )
				{
					.mm-btn_next
					{
						right: auto;
						left: 0;

						&:before
						{
							left: auto;
							right: 0;
						}
						&:after
						{
							@include mm_btn_arrow_prev;
						}

						+ a,
						+ span
						{
							margin-left: $mm_subopenWidth;
						}
					}
					.mm-btn_fullwidth
					{
						+ a,
						+ span
						{
							padding-left: $mm_subopenWidth;
						}
					}
				}
			}
		}
	

		//	Counters add-on
		@if ( $mm_opt_counters )
		{
			.mm-counter
			{
				left: $mm_subopenWidth - 5px;
				right: auto;

				@if ( $mm_opt_buttons )
				{
					+ .mm-btn_next
					{
						+ a,
						+ span
						{
							margin-left: $mm_counterWidth + $mm_subopenWidth;
						}
					}
				}
			}

			@if ( $mm_opt_buttons )
			{
				.mm-listview .mm-counter + .mm-btn_fullwidth
				{
					+ a,
					+ span
					{
						padding-left: $mm_counterWidth + $mm_subopenWidth;
					}
				}
			}
		}


		//	Icon panels add-on
		@if ( $mm_opt_iconpanels )
		{
			&[class*="mm-menu_iconpanel-"]
			{
				.mm-panels 
				{
					> .mm-panel
					{
						transition-property: transform, right;
					}

					> .mm-panel_iconpanel-first,
					> .mm-panel_iconpanel-first.mm-panel_opened ~ .mm-listview_fixeddivider
					{
						left: 0;
						right: 0;
					}

					> .mm-panel_opened,
					> .mm-panel_opened-parent
					{
						border-left: none;
						border-right: 1px solid;
						border-color: inherit;
					}
				}
			}
			[class*="mm-panel_iconpanel-"]
			{
				&,
				~ .mm-listview_fixeddivider
				{
					left: 0;
				}

				&.mm-panel_opened-parent
				{
				//	transform: translate3d( 0, 0, 0 );
					@include mm_translate( 0, 0 );
				}
			}

			@include mm_iconpanel_size( 40, 'right' );
			@include mm_iconpanel_size( 60, 'right' );
			@include mm_iconpanel_size( 80, 'right' );
		}


		//	Sidebar add-on
		@if ( $mm_opt_sidebar )
		{
			html[class*="mm-sidebar_expanded-"]:not( .mm-sidebar_closed ) .mm-menu_rtl ~ .mm-slideout
			{
				transform: translate( 0, 0 ) !important;
				right: 0;
			}
		}


		//	Toggles add-on
		@if ( $mm_opt_toggles or $mm_opt_checks )
		{
			label
			{
				&.mm-toggle,
				&.mm-check
				{
					left: $mm_padding * 2;
					right: auto !important;
				}

				@if ( $mm_opt_toggles )
				{
					&.mm-toggle
					{
						+ a,
						+ span
						{
							padding-left: $mm_toggleWidth + ( $mm_padding * 3 );
						}
					}
				}
				@if ( $mm_opt_checks )
				{
					&.mm-check
					{
						+ a,
						+ span
						{
							padding-left: $mm_checkWidth + ( $mm_padding * 3 );
						}
					}
				}
			}

			//	with subopen
			@if ( $mm_opt_buttons )
			{
				.mm-btn_next + label
				{
					&.mm-toggle,
					&.mm-check
					{
						left: $mm_subopenWidth + $mm_padding;
						
						+ a,
						+ span
						{
							margin-left: $mm_subopenWidth;
						}
					}
					@if ( $mm_opt_toggles )
					{
						&.mm-toggle
						{
							+ a,
							+ span
							{
								padding-left: $mm_toggleWidth + ( $mm_padding * 2 );
							}
						}
					}
					@if ( $mm_opt_checks )
					{
						&.mm-check
						{
							+ a,
							+ span
							{
								padding-left: $mm_checkWidth + ( $mm_padding * 2 );
							}
						}
					}
				}


				//	with counter
				@if ( $mm_opt_counters )
				{
					.mm-counter + .mm-btn_next + label
					{
						&.mm-toggle,
						&.mm-check
						{
							left: $mm_counterWidth + $mm_subopenWidth + $mm_padding;

							+ a,
							+ span
							{
								margin-left: $mm_counterWidth + $mm_subopenWidth;
							}
						}
					}
				}
			}
		}
	}
}
