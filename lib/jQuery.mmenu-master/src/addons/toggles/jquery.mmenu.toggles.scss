/*	
 * jQuery mmenu toggles add-on
 * mmenu.frebsite.nl
 */

@import "../../mixins";
@import "../../variables";


@if ( $mm_opt_toggles or $mm_opt_checks )
{
	input.mm-toggle,
	input.mm-check
	{
		position: absolute;
		left: -10000px;
	}

	label.mm-toggle,
	label.mm-check
	{
		margin: 0;
		position: absolute;
		top: 50%;
		z-index: 2;
		
		&:before
		{
			content: '';
			display: block;
		}
	}
}

@if ( $mm_opt_toggles )
{
	label.mm-toggle
	{
		border-radius: $mm_toggleHeight;
		width: $mm_toggleWidth;
		height: $mm_toggleHeight;
		margin-top: -( $mm_toggleHeight / 2 );

		&:before
		{
			border-radius: $mm_toggleHeight;
			width: $mm_toggleHeight - 2;
			height: $mm_toggleHeight - 2;
			margin: 1px;
		}
	}
	input.mm-toggle:checked ~ label.mm-toggle:before
	{
		float: right;
	}
}

@if ( $mm_opt_checks )
{
	label.mm-check
	{
		width: $mm_checkWidth;
		height: $mm_checkHeight;
		margin-top: -( $mm_checkHeight / 2 );

		&:before
		{
			border-left: 3px solid;
			border-bottom: 3px solid;
			width: 40%;
			height: 20%;
			margin: 25% 0 0 20%;
			opacity: 0.1;

			transform: rotate( -45deg );
		}
	}
	input.mm-check:checked ~ label.mm-check:before
	{
		opacity: 1;
	}
}

@if ( $mm_opt_toggles or $mm_opt_checks )
{
	@if ( $mm_opt_vertical )
	{
		.mm-listitem_vertical label
		{

			@if ( $mm_opt_toggles )
			{
				&.mm-toggle
				{
					top: ( $mm_btnSize - $mm_toggleHeight ) / 2;
					bottom: auto;
					margin-top: 0;
				}
			}
			@if ( $mm_opt_checks )
			{
				&.mm-check
				{
					top: ( $mm_btnSize - $mm_checkHeight ) / 2;
					bottom: auto;
					margin-top: 0;
				}
			}
		}
	}
}


// positioning
@if ( $mm_opt_toggles or $mm_opt_checks )
{
	label
	{
		@if ( $mm_opt_toggles )
		{
			&.mm-toggle
			{
				right: $mm_padding * 2;
				+ a,
				+ span
				{
					padding-right: $mm_toggleWidth + ( $mm_padding * 3 );
				}
			}
		}
		@if ( $mm_opt_checks )
		{
			&.mm-check
			{
				right: $mm_padding * 2;
				+ a,
				+ span
				{
					padding-right: $mm_checkWidth + ( $mm_padding * 3 );
				}
			}
		}
	}
}

// positioning with subopen
@if ( $mm_opt_toggles or $mm_opt_checks )
{
	@if ( $mm_opt_buttons )
	{
		.mm-btn_next + label
		{
			&.mm-toggle,
			&.mm-check
			{
				right: $mm_subopenWidth + $mm_padding;
				
				+ a,
				+ span
				{
					margin-right: $mm_subopenWidth;
				}
			}
			@if ( $mm_opt_toggles )
			{
				&.mm-toggle
				{
					+ a,
					+ span
					{
						padding-right: $mm_toggleWidth + ( $mm_padding * 2 );
					}
				}
			}
			@if ( $mm_opt_checks )
			{
				&.mm-check
				{
					+ a,
					+ span
					{
						padding-right: $mm_checkWidth + ( $mm_padding * 2 );
					}
				}
			}
		}
	}
}

// positioning with counter
@if ( $mm_opt_toggles or $mm_opt_checks )
{
	@if ( $mm_opt_counters and $mm_opt_buttons )
	{
		.mm-counter + .mm-btn_next + label
		{
			&.mm-toggle,
			&.mm-check
			{
				right: $mm_counterWidth + $mm_subopenWidth + $mm_padding;

				+ a,
				+ span
				{
					margin-right: $mm_counterWidth + $mm_subopenWidth;
				}
			}
		}
	}
}

@if ( $mm_opt_toggles )
{
	@include mm_toggles_colors;
}
@if ( $mm_opt_checks )
{
	@include mm_checks_colors;
}
